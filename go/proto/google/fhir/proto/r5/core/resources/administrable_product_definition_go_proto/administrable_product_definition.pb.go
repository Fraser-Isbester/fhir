//    Copyright 2023 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.21.12
// source: proto/google/fhir/proto/r5/core/resources/administrable_product_definition.proto

package administrable_product_definition_go_proto

import (
	_ "github.com/google/fhir/go/proto/google/fhir/proto/annotations_go_proto"
	codes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r5/core/codes_go_proto"
	datatypes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r5/core/datatypes_go_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Auto-generated from StructureDefinition for AdministrableProductDefinition.
// A medicinal product in the final form, suitable for administration - after
// any mixing of multiple components. See
// http://hl7.org/fhir/StructureDefinition/AdministrableProductDefinition
type AdministrableProductDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Logical id of this artifact
	Id *datatypes_go_proto.Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *datatypes_go_proto.Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *datatypes_go_proto.Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *datatypes_go_proto.Code `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *datatypes_go_proto.Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*anypb.Any `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,8,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,9,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// An identifier for the administrable product
	Identifier []*datatypes_go_proto.Identifier           `protobuf:"bytes,10,rep,name=identifier,proto3" json:"identifier,omitempty"`
	Status     *AdministrableProductDefinition_StatusCode `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// References a product from which one or more of the constituent parts of
	// that product can be prepared and used as described by this administrable
	// product
	FormOf []*datatypes_go_proto.Reference `protobuf:"bytes,12,rep,name=form_of,json=formOf,proto3" json:"form_of,omitempty"`
	// The dose form of the final product after necessary reconstitution or
	// processing
	AdministrableDoseForm *datatypes_go_proto.CodeableConcept `protobuf:"bytes,13,opt,name=administrable_dose_form,json=administrableDoseForm,proto3" json:"administrable_dose_form,omitempty"`
	// The presentation type in which this item is given to a patient. e.g. for a
	// spray - 'puff'
	UnitOfPresentation *datatypes_go_proto.CodeableConcept `protobuf:"bytes,14,opt,name=unit_of_presentation,json=unitOfPresentation,proto3" json:"unit_of_presentation,omitempty"`
	// Indicates the specific manufactured items that are part of the 'formOf'
	// product that are used in the preparation of this specific administrable
	// form
	ProducedFrom []*datatypes_go_proto.Reference `protobuf:"bytes,15,rep,name=produced_from,json=producedFrom,proto3" json:"produced_from,omitempty"`
	// The ingredients of this administrable medicinal product. This is only
	// needed if the ingredients are not specified either using
	// ManufacturedItemDefiniton, or using by incoming references from the
	// Ingredient resource
	Ingredient []*datatypes_go_proto.CodeableConcept `protobuf:"bytes,16,rep,name=ingredient,proto3" json:"ingredient,omitempty"`
	// A device that is integral to the medicinal product, in effect being
	// considered as an "ingredient" of the medicinal product
	Device *datatypes_go_proto.Reference `protobuf:"bytes,17,opt,name=device,proto3" json:"device,omitempty"`
	// A general description of the product, when in its final form, suitable for
	// administration e.g. effervescent blue liquid, to be swallowed
	Description           *datatypes_go_proto.Markdown                            `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
	Property              []*AdministrableProductDefinition_Property              `protobuf:"bytes,19,rep,name=property,proto3" json:"property,omitempty"`
	RouteOfAdministration []*AdministrableProductDefinition_RouteOfAdministration `protobuf:"bytes,20,rep,name=route_of_administration,json=routeOfAdministration,proto3" json:"route_of_administration,omitempty"`
}

func (x *AdministrableProductDefinition) Reset() {
	*x = AdministrableProductDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdministrableProductDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdministrableProductDefinition) ProtoMessage() {}

func (x *AdministrableProductDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdministrableProductDefinition.ProtoReflect.Descriptor instead.
func (*AdministrableProductDefinition) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_rawDescGZIP(), []int{0}
}

func (x *AdministrableProductDefinition) GetId() *datatypes_go_proto.Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AdministrableProductDefinition) GetMeta() *datatypes_go_proto.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *AdministrableProductDefinition) GetImplicitRules() *datatypes_go_proto.Uri {
	if x != nil {
		return x.ImplicitRules
	}
	return nil
}

func (x *AdministrableProductDefinition) GetLanguage() *datatypes_go_proto.Code {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *AdministrableProductDefinition) GetText() *datatypes_go_proto.Narrative {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *AdministrableProductDefinition) GetContained() []*anypb.Any {
	if x != nil {
		return x.Contained
	}
	return nil
}

func (x *AdministrableProductDefinition) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *AdministrableProductDefinition) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *AdministrableProductDefinition) GetIdentifier() []*datatypes_go_proto.Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *AdministrableProductDefinition) GetStatus() *AdministrableProductDefinition_StatusCode {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *AdministrableProductDefinition) GetFormOf() []*datatypes_go_proto.Reference {
	if x != nil {
		return x.FormOf
	}
	return nil
}

func (x *AdministrableProductDefinition) GetAdministrableDoseForm() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.AdministrableDoseForm
	}
	return nil
}

func (x *AdministrableProductDefinition) GetUnitOfPresentation() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.UnitOfPresentation
	}
	return nil
}

func (x *AdministrableProductDefinition) GetProducedFrom() []*datatypes_go_proto.Reference {
	if x != nil {
		return x.ProducedFrom
	}
	return nil
}

func (x *AdministrableProductDefinition) GetIngredient() []*datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Ingredient
	}
	return nil
}

func (x *AdministrableProductDefinition) GetDevice() *datatypes_go_proto.Reference {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *AdministrableProductDefinition) GetDescription() *datatypes_go_proto.Markdown {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *AdministrableProductDefinition) GetProperty() []*AdministrableProductDefinition_Property {
	if x != nil {
		return x.Property
	}
	return nil
}

func (x *AdministrableProductDefinition) GetRouteOfAdministration() []*AdministrableProductDefinition_RouteOfAdministration {
	if x != nil {
		return x.RouteOfAdministration
	}
	return nil
}

// draft | active | retired | unknown
type AdministrableProductDefinition_StatusCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.PublicationStatusCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r5.core.PublicationStatusCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension            `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *AdministrableProductDefinition_StatusCode) Reset() {
	*x = AdministrableProductDefinition_StatusCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdministrableProductDefinition_StatusCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdministrableProductDefinition_StatusCode) ProtoMessage() {}

func (x *AdministrableProductDefinition_StatusCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdministrableProductDefinition_StatusCode.ProtoReflect.Descriptor instead.
func (*AdministrableProductDefinition_StatusCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AdministrableProductDefinition_StatusCode) GetValue() codes_go_proto.PublicationStatusCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.PublicationStatusCode_Value(0)
}

func (x *AdministrableProductDefinition_StatusCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AdministrableProductDefinition_StatusCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// Characteristics e.g. a product's onset of action
type AdministrableProductDefinition_Property struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// A code expressing the type of characteristic
	Type  *datatypes_go_proto.CodeableConcept             `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Value *AdministrableProductDefinition_Property_ValueX `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// The status of characteristic e.g. assigned or pending
	Status *datatypes_go_proto.CodeableConcept `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AdministrableProductDefinition_Property) Reset() {
	*x = AdministrableProductDefinition_Property{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdministrableProductDefinition_Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdministrableProductDefinition_Property) ProtoMessage() {}

func (x *AdministrableProductDefinition_Property) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdministrableProductDefinition_Property.ProtoReflect.Descriptor instead.
func (*AdministrableProductDefinition_Property) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_rawDescGZIP(), []int{0, 1}
}

func (x *AdministrableProductDefinition_Property) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AdministrableProductDefinition_Property) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *AdministrableProductDefinition_Property) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *AdministrableProductDefinition_Property) GetType() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *AdministrableProductDefinition_Property) GetValue() *AdministrableProductDefinition_Property_ValueX {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *AdministrableProductDefinition_Property) GetStatus() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Status
	}
	return nil
}

// The path by which the product is taken into or makes contact with the body
type AdministrableProductDefinition_RouteOfAdministration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Coded expression for the route
	Code *datatypes_go_proto.CodeableConcept `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// The first dose (dose quantity) administered can be specified for the
	// product
	FirstDose *datatypes_go_proto.Quantity `protobuf:"bytes,5,opt,name=first_dose,json=firstDose,proto3" json:"first_dose,omitempty"`
	// The maximum single dose that can be administered
	MaxSingleDose *datatypes_go_proto.Quantity `protobuf:"bytes,6,opt,name=max_single_dose,json=maxSingleDose,proto3" json:"max_single_dose,omitempty"`
	// The maximum dose quantity to be administered in any one 24-h period
	MaxDosePerDay *datatypes_go_proto.Quantity `protobuf:"bytes,7,opt,name=max_dose_per_day,json=maxDosePerDay,proto3" json:"max_dose_per_day,omitempty"`
	// The maximum dose per treatment period that can be administered
	MaxDosePerTreatmentPeriod *datatypes_go_proto.Ratio `protobuf:"bytes,8,opt,name=max_dose_per_treatment_period,json=maxDosePerTreatmentPeriod,proto3" json:"max_dose_per_treatment_period,omitempty"`
	// The maximum treatment period during which the product can be administered
	MaxTreatmentPeriod *datatypes_go_proto.Duration                                          `protobuf:"bytes,9,opt,name=max_treatment_period,json=maxTreatmentPeriod,proto3" json:"max_treatment_period,omitempty"`
	TargetSpecies      []*AdministrableProductDefinition_RouteOfAdministration_TargetSpecies `protobuf:"bytes,10,rep,name=target_species,json=targetSpecies,proto3" json:"target_species,omitempty"`
}

func (x *AdministrableProductDefinition_RouteOfAdministration) Reset() {
	*x = AdministrableProductDefinition_RouteOfAdministration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdministrableProductDefinition_RouteOfAdministration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdministrableProductDefinition_RouteOfAdministration) ProtoMessage() {}

func (x *AdministrableProductDefinition_RouteOfAdministration) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdministrableProductDefinition_RouteOfAdministration.ProtoReflect.Descriptor instead.
func (*AdministrableProductDefinition_RouteOfAdministration) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_rawDescGZIP(), []int{0, 2}
}

func (x *AdministrableProductDefinition_RouteOfAdministration) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AdministrableProductDefinition_RouteOfAdministration) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *AdministrableProductDefinition_RouteOfAdministration) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *AdministrableProductDefinition_RouteOfAdministration) GetCode() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *AdministrableProductDefinition_RouteOfAdministration) GetFirstDose() *datatypes_go_proto.Quantity {
	if x != nil {
		return x.FirstDose
	}
	return nil
}

func (x *AdministrableProductDefinition_RouteOfAdministration) GetMaxSingleDose() *datatypes_go_proto.Quantity {
	if x != nil {
		return x.MaxSingleDose
	}
	return nil
}

func (x *AdministrableProductDefinition_RouteOfAdministration) GetMaxDosePerDay() *datatypes_go_proto.Quantity {
	if x != nil {
		return x.MaxDosePerDay
	}
	return nil
}

func (x *AdministrableProductDefinition_RouteOfAdministration) GetMaxDosePerTreatmentPeriod() *datatypes_go_proto.Ratio {
	if x != nil {
		return x.MaxDosePerTreatmentPeriod
	}
	return nil
}

func (x *AdministrableProductDefinition_RouteOfAdministration) GetMaxTreatmentPeriod() *datatypes_go_proto.Duration {
	if x != nil {
		return x.MaxTreatmentPeriod
	}
	return nil
}

func (x *AdministrableProductDefinition_RouteOfAdministration) GetTargetSpecies() []*AdministrableProductDefinition_RouteOfAdministration_TargetSpecies {
	if x != nil {
		return x.TargetSpecies
	}
	return nil
}

// A value for the characteristic
type AdministrableProductDefinition_Property_ValueX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//
	//	*AdministrableProductDefinition_Property_ValueX_CodeableConcept
	//	*AdministrableProductDefinition_Property_ValueX_Quantity
	//	*AdministrableProductDefinition_Property_ValueX_Date
	//	*AdministrableProductDefinition_Property_ValueX_Boolean
	//	*AdministrableProductDefinition_Property_ValueX_Markdown
	//	*AdministrableProductDefinition_Property_ValueX_Attachment
	//	*AdministrableProductDefinition_Property_ValueX_Reference
	Choice isAdministrableProductDefinition_Property_ValueX_Choice `protobuf_oneof:"choice"`
}

func (x *AdministrableProductDefinition_Property_ValueX) Reset() {
	*x = AdministrableProductDefinition_Property_ValueX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdministrableProductDefinition_Property_ValueX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdministrableProductDefinition_Property_ValueX) ProtoMessage() {}

func (x *AdministrableProductDefinition_Property_ValueX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdministrableProductDefinition_Property_ValueX.ProtoReflect.Descriptor instead.
func (*AdministrableProductDefinition_Property_ValueX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (m *AdministrableProductDefinition_Property_ValueX) GetChoice() isAdministrableProductDefinition_Property_ValueX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *AdministrableProductDefinition_Property_ValueX) GetCodeableConcept() *datatypes_go_proto.CodeableConcept {
	if x, ok := x.GetChoice().(*AdministrableProductDefinition_Property_ValueX_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (x *AdministrableProductDefinition_Property_ValueX) GetQuantity() *datatypes_go_proto.Quantity {
	if x, ok := x.GetChoice().(*AdministrableProductDefinition_Property_ValueX_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (x *AdministrableProductDefinition_Property_ValueX) GetDate() *datatypes_go_proto.Date {
	if x, ok := x.GetChoice().(*AdministrableProductDefinition_Property_ValueX_Date); ok {
		return x.Date
	}
	return nil
}

func (x *AdministrableProductDefinition_Property_ValueX) GetBoolean() *datatypes_go_proto.Boolean {
	if x, ok := x.GetChoice().(*AdministrableProductDefinition_Property_ValueX_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (x *AdministrableProductDefinition_Property_ValueX) GetMarkdown() *datatypes_go_proto.Markdown {
	if x, ok := x.GetChoice().(*AdministrableProductDefinition_Property_ValueX_Markdown); ok {
		return x.Markdown
	}
	return nil
}

func (x *AdministrableProductDefinition_Property_ValueX) GetAttachment() *datatypes_go_proto.Attachment {
	if x, ok := x.GetChoice().(*AdministrableProductDefinition_Property_ValueX_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (x *AdministrableProductDefinition_Property_ValueX) GetReference() *datatypes_go_proto.Reference {
	if x, ok := x.GetChoice().(*AdministrableProductDefinition_Property_ValueX_Reference); ok {
		return x.Reference
	}
	return nil
}

type isAdministrableProductDefinition_Property_ValueX_Choice interface {
	isAdministrableProductDefinition_Property_ValueX_Choice()
}

type AdministrableProductDefinition_Property_ValueX_CodeableConcept struct {
	CodeableConcept *datatypes_go_proto.CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type AdministrableProductDefinition_Property_ValueX_Quantity struct {
	Quantity *datatypes_go_proto.Quantity `protobuf:"bytes,2,opt,name=quantity,proto3,oneof"`
}

type AdministrableProductDefinition_Property_ValueX_Date struct {
	Date *datatypes_go_proto.Date `protobuf:"bytes,3,opt,name=date,proto3,oneof"`
}

type AdministrableProductDefinition_Property_ValueX_Boolean struct {
	Boolean *datatypes_go_proto.Boolean `protobuf:"bytes,4,opt,name=boolean,proto3,oneof"`
}

type AdministrableProductDefinition_Property_ValueX_Markdown struct {
	Markdown *datatypes_go_proto.Markdown `protobuf:"bytes,5,opt,name=markdown,proto3,oneof"`
}

type AdministrableProductDefinition_Property_ValueX_Attachment struct {
	Attachment *datatypes_go_proto.Attachment `protobuf:"bytes,6,opt,name=attachment,proto3,oneof"`
}

type AdministrableProductDefinition_Property_ValueX_Reference struct {
	Reference *datatypes_go_proto.Reference `protobuf:"bytes,7,opt,name=reference,proto3,oneof"`
}

func (*AdministrableProductDefinition_Property_ValueX_CodeableConcept) isAdministrableProductDefinition_Property_ValueX_Choice() {
}

func (*AdministrableProductDefinition_Property_ValueX_Quantity) isAdministrableProductDefinition_Property_ValueX_Choice() {
}

func (*AdministrableProductDefinition_Property_ValueX_Date) isAdministrableProductDefinition_Property_ValueX_Choice() {
}

func (*AdministrableProductDefinition_Property_ValueX_Boolean) isAdministrableProductDefinition_Property_ValueX_Choice() {
}

func (*AdministrableProductDefinition_Property_ValueX_Markdown) isAdministrableProductDefinition_Property_ValueX_Choice() {
}

func (*AdministrableProductDefinition_Property_ValueX_Attachment) isAdministrableProductDefinition_Property_ValueX_Choice() {
}

func (*AdministrableProductDefinition_Property_ValueX_Reference) isAdministrableProductDefinition_Property_ValueX_Choice() {
}

// A species for which this route applies
type AdministrableProductDefinition_RouteOfAdministration_TargetSpecies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Coded expression for the species
	Code             *datatypes_go_proto.CodeableConcept                                                    `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	WithdrawalPeriod []*AdministrableProductDefinition_RouteOfAdministration_TargetSpecies_WithdrawalPeriod `protobuf:"bytes,5,rep,name=withdrawal_period,json=withdrawalPeriod,proto3" json:"withdrawal_period,omitempty"`
}

func (x *AdministrableProductDefinition_RouteOfAdministration_TargetSpecies) Reset() {
	*x = AdministrableProductDefinition_RouteOfAdministration_TargetSpecies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdministrableProductDefinition_RouteOfAdministration_TargetSpecies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdministrableProductDefinition_RouteOfAdministration_TargetSpecies) ProtoMessage() {}

func (x *AdministrableProductDefinition_RouteOfAdministration_TargetSpecies) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdministrableProductDefinition_RouteOfAdministration_TargetSpecies.ProtoReflect.Descriptor instead.
func (*AdministrableProductDefinition_RouteOfAdministration_TargetSpecies) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *AdministrableProductDefinition_RouteOfAdministration_TargetSpecies) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AdministrableProductDefinition_RouteOfAdministration_TargetSpecies) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *AdministrableProductDefinition_RouteOfAdministration_TargetSpecies) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *AdministrableProductDefinition_RouteOfAdministration_TargetSpecies) GetCode() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *AdministrableProductDefinition_RouteOfAdministration_TargetSpecies) GetWithdrawalPeriod() []*AdministrableProductDefinition_RouteOfAdministration_TargetSpecies_WithdrawalPeriod {
	if x != nil {
		return x.WithdrawalPeriod
	}
	return nil
}

// A species specific time during which consumption of animal product is
// not appropriate
type AdministrableProductDefinition_RouteOfAdministration_TargetSpecies_WithdrawalPeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The type of tissue for which the withdrawal period applies, e.g.
	// meat, milk
	Tissue *datatypes_go_proto.CodeableConcept `protobuf:"bytes,4,opt,name=tissue,proto3" json:"tissue,omitempty"`
	// A value for the time
	Value *datatypes_go_proto.Quantity `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// Extra information about the withdrawal period
	SupportingInformation *datatypes_go_proto.String `protobuf:"bytes,6,opt,name=supporting_information,json=supportingInformation,proto3" json:"supporting_information,omitempty"`
}

func (x *AdministrableProductDefinition_RouteOfAdministration_TargetSpecies_WithdrawalPeriod) Reset() {
	*x = AdministrableProductDefinition_RouteOfAdministration_TargetSpecies_WithdrawalPeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdministrableProductDefinition_RouteOfAdministration_TargetSpecies_WithdrawalPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdministrableProductDefinition_RouteOfAdministration_TargetSpecies_WithdrawalPeriod) ProtoMessage() {
}

func (x *AdministrableProductDefinition_RouteOfAdministration_TargetSpecies_WithdrawalPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdministrableProductDefinition_RouteOfAdministration_TargetSpecies_WithdrawalPeriod.ProtoReflect.Descriptor instead.
func (*AdministrableProductDefinition_RouteOfAdministration_TargetSpecies_WithdrawalPeriod) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_rawDescGZIP(), []int{0, 2, 0, 0}
}

func (x *AdministrableProductDefinition_RouteOfAdministration_TargetSpecies_WithdrawalPeriod) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AdministrableProductDefinition_RouteOfAdministration_TargetSpecies_WithdrawalPeriod) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *AdministrableProductDefinition_RouteOfAdministration_TargetSpecies_WithdrawalPeriod) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *AdministrableProductDefinition_RouteOfAdministration_TargetSpecies_WithdrawalPeriod) GetTissue() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Tissue
	}
	return nil
}

func (x *AdministrableProductDefinition_RouteOfAdministration_TargetSpecies_WithdrawalPeriod) GetValue() *datatypes_go_proto.Quantity {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *AdministrableProductDefinition_RouteOfAdministration_TargetSpecies_WithdrawalPeriod) GetSupportingInformation() *datatypes_go_proto.String {
	if x != nil {
		return x.SupportingInformation
	}
	return nil
}

var File_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto protoreflect.FileDescriptor

var file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_rawDesc = []byte{
	0x0a, 0x50, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x35, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x13, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x35, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63,
	0x6f, 0x64, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x35, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x22, 0x0a, 0x1e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63,
	0x69, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x72, 0x69, 0x52, 0x0d, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63,
	0x69, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x32,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x4e, 0x61, 0x72, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x5e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x59, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x66, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x20, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x1a, 0x4d, 0x65, 0x64,
	0x69, 0x63, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x66, 0x12,
	0x5c, 0x0a, 0x17, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x64, 0x6f, 0x73, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x15, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x6f, 0x73, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x56, 0x0a,
	0x14, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70,
	0x74, 0x52, 0x12, 0x75, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x65, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x20, 0xf2, 0xff,
	0xfc, 0xc2, 0x06, 0x1a, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x44, 0x0a, 0x0a,
	0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x0a, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65,
	0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x42, 0x16, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x10, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x61,
	0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18,
	0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x89, 0x01,
	0x0a, 0x17, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x49, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4f, 0x66, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb,
	0x04, 0x01, 0x52, 0x15, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x4f, 0x66, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xae, 0x02, 0x0a, 0x0a, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a,
	0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x6d, 0x8a, 0xf9, 0x83,
	0xb2, 0x05, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x85, 0x07, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x40, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x63, 0x65, 0x70, 0x74, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x59, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x58, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3c,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x63, 0x65, 0x70, 0x74, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0xe3, 0x03, 0x0a,
	0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x58, 0x12, 0x51, 0x0a, 0x10, 0x63, 0x6f, 0x64, 0x65, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x6f, 0x64, 0x65, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6c,
	0x65, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65,
	0x61, 0x6e, 0x12, 0x3b, 0x0a, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x64,
	0x6f, 0x77, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x12,
	0x41, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x0c, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x06, 0x42, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x3a, 0x06, 0xa0, 0x83, 0x83, 0xe8, 0x06, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x1a, 0xdb, 0x0c, 0x0a, 0x15, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4f, 0x66, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb,
	0x04, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x5f, 0x64, 0x6f, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x09, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x44, 0x6f, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x64, 0x6f, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0d,
	0x6d, 0x61, 0x78, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x6f, 0x73, 0x65, 0x12, 0x46, 0x0a,
	0x10, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x6f, 0x73, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x64, 0x61,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x44, 0x6f, 0x73, 0x65, 0x50,
	0x65, 0x72, 0x44, 0x61, 0x79, 0x12, 0x5c, 0x0a, 0x1d, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x6f, 0x73,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x52, 0x19, 0x6d, 0x61, 0x78, 0x44, 0x6f, 0x73,
	0x65, 0x50, 0x65, 0x72, 0x54, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x12, 0x4f, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x72, 0x65, 0x61, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x12, 0x6d, 0x61, 0x78, 0x54, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x7e, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x62, 0x6c, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4f, 0x66, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x65, 0x73, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x65, 0x73, 0x1a, 0xc9, 0x06, 0x0a, 0x0d, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x40, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x63, 0x65, 0x70, 0x74, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x95, 0x01, 0x0a, 0x11, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x68,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4f, 0x66, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x61, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x1a, 0xa3, 0x03, 0x0a, 0x10, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12,
	0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x06, 0x74, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x42,
	0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x06, 0x74, 0x69, 0x73, 0x73, 0x75, 0x65, 0x12,
	0x3b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x06, 0xf0,
	0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x52, 0x0a, 0x16,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x15, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x3a, 0x95, 0x01, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x03, 0xb2, 0xfe, 0xe4, 0x97, 0x06, 0x46, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x9a, 0x86, 0x93, 0xa0, 0x08, 0x3d, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x66,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x28, 0x29, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x29, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x42, 0x90,
	0x01, 0x98, 0xc6, 0xb0, 0xb5, 0x07, 0x05, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x35, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x50, 0x01, 0x5a, 0x6d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x35, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_rawDescOnce sync.Once
	file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_rawDescData = file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_rawDesc
)

func file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_rawDescGZIP() []byte {
	file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_rawDescOnce.Do(func() {
		file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_rawDescData)
	})
	return file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_rawDescData
}

var file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_goTypes = []interface{}{
	(*AdministrableProductDefinition)(nil),                                                      // 0: google.fhir.r5.core.AdministrableProductDefinition
	(*AdministrableProductDefinition_StatusCode)(nil),                                           // 1: google.fhir.r5.core.AdministrableProductDefinition.StatusCode
	(*AdministrableProductDefinition_Property)(nil),                                             // 2: google.fhir.r5.core.AdministrableProductDefinition.Property
	(*AdministrableProductDefinition_RouteOfAdministration)(nil),                                // 3: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration
	(*AdministrableProductDefinition_Property_ValueX)(nil),                                      // 4: google.fhir.r5.core.AdministrableProductDefinition.Property.ValueX
	(*AdministrableProductDefinition_RouteOfAdministration_TargetSpecies)(nil),                  // 5: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.TargetSpecies
	(*AdministrableProductDefinition_RouteOfAdministration_TargetSpecies_WithdrawalPeriod)(nil), // 6: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.TargetSpecies.WithdrawalPeriod
	(*datatypes_go_proto.Id)(nil),                                                               // 7: google.fhir.r5.core.Id
	(*datatypes_go_proto.Meta)(nil),                                                             // 8: google.fhir.r5.core.Meta
	(*datatypes_go_proto.Uri)(nil),                                                              // 9: google.fhir.r5.core.Uri
	(*datatypes_go_proto.Code)(nil),                                                             // 10: google.fhir.r5.core.Code
	(*datatypes_go_proto.Narrative)(nil),                                                        // 11: google.fhir.r5.core.Narrative
	(*anypb.Any)(nil),                                                                           // 12: google.protobuf.Any
	(*datatypes_go_proto.Extension)(nil),                                                        // 13: google.fhir.r5.core.Extension
	(*datatypes_go_proto.Identifier)(nil),                                                       // 14: google.fhir.r5.core.Identifier
	(*datatypes_go_proto.Reference)(nil),                                                        // 15: google.fhir.r5.core.Reference
	(*datatypes_go_proto.CodeableConcept)(nil),                                                  // 16: google.fhir.r5.core.CodeableConcept
	(*datatypes_go_proto.Markdown)(nil),                                                         // 17: google.fhir.r5.core.Markdown
	(codes_go_proto.PublicationStatusCode_Value)(0),                                             // 18: google.fhir.r5.core.PublicationStatusCode.Value
	(*datatypes_go_proto.String)(nil),                                                           // 19: google.fhir.r5.core.String
	(*datatypes_go_proto.Quantity)(nil),                                                         // 20: google.fhir.r5.core.Quantity
	(*datatypes_go_proto.Ratio)(nil),                                                            // 21: google.fhir.r5.core.Ratio
	(*datatypes_go_proto.Duration)(nil),                                                         // 22: google.fhir.r5.core.Duration
	(*datatypes_go_proto.Date)(nil),                                                             // 23: google.fhir.r5.core.Date
	(*datatypes_go_proto.Boolean)(nil),                                                          // 24: google.fhir.r5.core.Boolean
	(*datatypes_go_proto.Attachment)(nil),                                                       // 25: google.fhir.r5.core.Attachment
}
var file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_depIdxs = []int32{
	7,  // 0: google.fhir.r5.core.AdministrableProductDefinition.id:type_name -> google.fhir.r5.core.Id
	8,  // 1: google.fhir.r5.core.AdministrableProductDefinition.meta:type_name -> google.fhir.r5.core.Meta
	9,  // 2: google.fhir.r5.core.AdministrableProductDefinition.implicit_rules:type_name -> google.fhir.r5.core.Uri
	10, // 3: google.fhir.r5.core.AdministrableProductDefinition.language:type_name -> google.fhir.r5.core.Code
	11, // 4: google.fhir.r5.core.AdministrableProductDefinition.text:type_name -> google.fhir.r5.core.Narrative
	12, // 5: google.fhir.r5.core.AdministrableProductDefinition.contained:type_name -> google.protobuf.Any
	13, // 6: google.fhir.r5.core.AdministrableProductDefinition.extension:type_name -> google.fhir.r5.core.Extension
	13, // 7: google.fhir.r5.core.AdministrableProductDefinition.modifier_extension:type_name -> google.fhir.r5.core.Extension
	14, // 8: google.fhir.r5.core.AdministrableProductDefinition.identifier:type_name -> google.fhir.r5.core.Identifier
	1,  // 9: google.fhir.r5.core.AdministrableProductDefinition.status:type_name -> google.fhir.r5.core.AdministrableProductDefinition.StatusCode
	15, // 10: google.fhir.r5.core.AdministrableProductDefinition.form_of:type_name -> google.fhir.r5.core.Reference
	16, // 11: google.fhir.r5.core.AdministrableProductDefinition.administrable_dose_form:type_name -> google.fhir.r5.core.CodeableConcept
	16, // 12: google.fhir.r5.core.AdministrableProductDefinition.unit_of_presentation:type_name -> google.fhir.r5.core.CodeableConcept
	15, // 13: google.fhir.r5.core.AdministrableProductDefinition.produced_from:type_name -> google.fhir.r5.core.Reference
	16, // 14: google.fhir.r5.core.AdministrableProductDefinition.ingredient:type_name -> google.fhir.r5.core.CodeableConcept
	15, // 15: google.fhir.r5.core.AdministrableProductDefinition.device:type_name -> google.fhir.r5.core.Reference
	17, // 16: google.fhir.r5.core.AdministrableProductDefinition.description:type_name -> google.fhir.r5.core.Markdown
	2,  // 17: google.fhir.r5.core.AdministrableProductDefinition.property:type_name -> google.fhir.r5.core.AdministrableProductDefinition.Property
	3,  // 18: google.fhir.r5.core.AdministrableProductDefinition.route_of_administration:type_name -> google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration
	18, // 19: google.fhir.r5.core.AdministrableProductDefinition.StatusCode.value:type_name -> google.fhir.r5.core.PublicationStatusCode.Value
	19, // 20: google.fhir.r5.core.AdministrableProductDefinition.StatusCode.id:type_name -> google.fhir.r5.core.String
	13, // 21: google.fhir.r5.core.AdministrableProductDefinition.StatusCode.extension:type_name -> google.fhir.r5.core.Extension
	19, // 22: google.fhir.r5.core.AdministrableProductDefinition.Property.id:type_name -> google.fhir.r5.core.String
	13, // 23: google.fhir.r5.core.AdministrableProductDefinition.Property.extension:type_name -> google.fhir.r5.core.Extension
	13, // 24: google.fhir.r5.core.AdministrableProductDefinition.Property.modifier_extension:type_name -> google.fhir.r5.core.Extension
	16, // 25: google.fhir.r5.core.AdministrableProductDefinition.Property.type:type_name -> google.fhir.r5.core.CodeableConcept
	4,  // 26: google.fhir.r5.core.AdministrableProductDefinition.Property.value:type_name -> google.fhir.r5.core.AdministrableProductDefinition.Property.ValueX
	16, // 27: google.fhir.r5.core.AdministrableProductDefinition.Property.status:type_name -> google.fhir.r5.core.CodeableConcept
	19, // 28: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.id:type_name -> google.fhir.r5.core.String
	13, // 29: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.extension:type_name -> google.fhir.r5.core.Extension
	13, // 30: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.modifier_extension:type_name -> google.fhir.r5.core.Extension
	16, // 31: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.code:type_name -> google.fhir.r5.core.CodeableConcept
	20, // 32: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.first_dose:type_name -> google.fhir.r5.core.Quantity
	20, // 33: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.max_single_dose:type_name -> google.fhir.r5.core.Quantity
	20, // 34: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.max_dose_per_day:type_name -> google.fhir.r5.core.Quantity
	21, // 35: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.max_dose_per_treatment_period:type_name -> google.fhir.r5.core.Ratio
	22, // 36: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.max_treatment_period:type_name -> google.fhir.r5.core.Duration
	5,  // 37: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.target_species:type_name -> google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.TargetSpecies
	16, // 38: google.fhir.r5.core.AdministrableProductDefinition.Property.ValueX.codeable_concept:type_name -> google.fhir.r5.core.CodeableConcept
	20, // 39: google.fhir.r5.core.AdministrableProductDefinition.Property.ValueX.quantity:type_name -> google.fhir.r5.core.Quantity
	23, // 40: google.fhir.r5.core.AdministrableProductDefinition.Property.ValueX.date:type_name -> google.fhir.r5.core.Date
	24, // 41: google.fhir.r5.core.AdministrableProductDefinition.Property.ValueX.boolean:type_name -> google.fhir.r5.core.Boolean
	17, // 42: google.fhir.r5.core.AdministrableProductDefinition.Property.ValueX.markdown:type_name -> google.fhir.r5.core.Markdown
	25, // 43: google.fhir.r5.core.AdministrableProductDefinition.Property.ValueX.attachment:type_name -> google.fhir.r5.core.Attachment
	15, // 44: google.fhir.r5.core.AdministrableProductDefinition.Property.ValueX.reference:type_name -> google.fhir.r5.core.Reference
	19, // 45: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.TargetSpecies.id:type_name -> google.fhir.r5.core.String
	13, // 46: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.TargetSpecies.extension:type_name -> google.fhir.r5.core.Extension
	13, // 47: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.TargetSpecies.modifier_extension:type_name -> google.fhir.r5.core.Extension
	16, // 48: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.TargetSpecies.code:type_name -> google.fhir.r5.core.CodeableConcept
	6,  // 49: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.TargetSpecies.withdrawal_period:type_name -> google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.TargetSpecies.WithdrawalPeriod
	19, // 50: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.TargetSpecies.WithdrawalPeriod.id:type_name -> google.fhir.r5.core.String
	13, // 51: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.TargetSpecies.WithdrawalPeriod.extension:type_name -> google.fhir.r5.core.Extension
	13, // 52: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.TargetSpecies.WithdrawalPeriod.modifier_extension:type_name -> google.fhir.r5.core.Extension
	16, // 53: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.TargetSpecies.WithdrawalPeriod.tissue:type_name -> google.fhir.r5.core.CodeableConcept
	20, // 54: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.TargetSpecies.WithdrawalPeriod.value:type_name -> google.fhir.r5.core.Quantity
	19, // 55: google.fhir.r5.core.AdministrableProductDefinition.RouteOfAdministration.TargetSpecies.WithdrawalPeriod.supporting_information:type_name -> google.fhir.r5.core.String
	56, // [56:56] is the sub-list for method output_type
	56, // [56:56] is the sub-list for method input_type
	56, // [56:56] is the sub-list for extension type_name
	56, // [56:56] is the sub-list for extension extendee
	0,  // [0:56] is the sub-list for field type_name
}

func init() {
	file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_init()
}
func file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_init() {
	if File_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdministrableProductDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdministrableProductDefinition_StatusCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdministrableProductDefinition_Property); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdministrableProductDefinition_RouteOfAdministration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdministrableProductDefinition_Property_ValueX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdministrableProductDefinition_RouteOfAdministration_TargetSpecies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdministrableProductDefinition_RouteOfAdministration_TargetSpecies_WithdrawalPeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*AdministrableProductDefinition_Property_ValueX_CodeableConcept)(nil),
		(*AdministrableProductDefinition_Property_ValueX_Quantity)(nil),
		(*AdministrableProductDefinition_Property_ValueX_Date)(nil),
		(*AdministrableProductDefinition_Property_ValueX_Boolean)(nil),
		(*AdministrableProductDefinition_Property_ValueX_Markdown)(nil),
		(*AdministrableProductDefinition_Property_ValueX_Attachment)(nil),
		(*AdministrableProductDefinition_Property_ValueX_Reference)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_goTypes,
		DependencyIndexes: file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_depIdxs,
		MessageInfos:      file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_msgTypes,
	}.Build()
	File_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto = out.File
	file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_rawDesc = nil
	file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_goTypes = nil
	file_proto_google_fhir_proto_r5_core_resources_administrable_product_definition_proto_depIdxs = nil
}
